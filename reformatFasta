#!/usr/bin/env ruby

require 'bio'
require 'optimist'
require 'ZFile'

ARGV.push("--help") if ARGV.empty?
opts = Optimist::options do
  banner File.basename($0)
  opt :input, "Input fasta file", :required=>true, :type=>:string
  opt :header, "keep sequence header", :default=>false
  opt :noambig, "remove N's, X's", :default=>false
  opt :remove, "remove alignment", :default=>false
  opt :linelen, "line Length", :default=>60, :type=>:integer
  opt :fastq, "read in fastq"
  opt :utot, "convert u's to t's"
  opt :cut, "cut header at symbol", :type=>:string
end

if opts.fastq
  form = Bio::Fastq
else
  form = Bio::FastaFormat
end

Bio::FlatFile.new(form, ZFile.new(opts.input)).each do |seq|
  seq.seq.gsub!(/-|\./,"") if opts.remove
  seq.seq.gsub!(/N|n|X|x/,"") if opts.noambig
  seq.seq.tr!("U","T") if opts.utot
  seq.seq.tr!("u","t") if opts.utot
  if !opts.header || opts.fastq
    header = seq.entry_id
  else
    header = seq.definition
  end
  header = header.split(opts.cut).first if opts.cut
  print seq.to_seq.output(:fasta, :header=>header, :width=>opts.linelen) 
end
