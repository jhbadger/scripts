#!/usr/bin/env ruby

require 'bio'
require 'ZFile'
require 'optimist'

ARGV.push("--help") if ARGV.empty?
opts = Optimist::options do
  banner File.basename($0) + " [options] pattern file [...file...]"
  opt :file, "pattern is file"
  opt :onlyfirst, "only pick first matching sequence"
  opt :begin, "must match begining of header"
  opt :fastq, "Read fastq format rather than fasta"
  opt :inverse, "Return things not matching"
end

if opts.fastq
  form = Bio::Fastq
else
  form = Bio::FastaFormat
end

pat = ARGV.shift

patterns = Hash.new
if opts.file
  File.new(pat).each do |line|
    #fields = line.chomp.split(" ")
    patterns[line.chomp] = true
  end
else
  patterns[pat] = true
end

if patterns.keys.empty?
  STDERR << File.basename($0)+": Search pattern required\n"
  exit(1)
end

if opts.begin
  beg="^"
else
  beg = ""
end

ARGV.each do |input|
  Bio::FlatFile.new(form, ZFile.new(input)).each do |seq|
    match = false
    matchedkey = ""
    patterns.keys.each do |key|
      if seq.definition =~/#{beg}#{key}/
        match = true
        matchedkey = key
        break if opts.onlyfirst
      end
    end
    print seq if (match && !opts.inverse) || (!match && opts.inverse)
    if match && opts.onlyfirst
      patterns.delete matchedkey
    end
  end
end
