#!/usr/bin/env ruby

require 'optimist'
require 'bio'    

ARGV.push("--help") if ARGV.empty?
opts = Optimist::options do
  banner File.basename($0)
  opt :input, "Input fasta file", :required=>true, :type=>:string
end

# is a fasta file nucleotide
def isNuc?(fasta)
   seq = File.read(fasta, 10000).split("\n").grep(/^[^>]/).join
   seq.count("AGTCNU").to_f / seq.length > 0.90
end

# converts fasta to NEXUS format
def fasta2Nexus(alignFile, nuc = isNuc?(alignFile), nexFile = nil)
   seqs = Hash.new
   Bio::FlatFile.new(Bio::FastaFormat, File.new(alignFile)).each do |seq|
      seqs[seq.entry_id] = seq.seq
   end
   if nuc
      type = "NUC"
   else
      type = "PROT"
   end
   if (nexFile.nil?)
      out = STDOUT
   else
      out = File.new(nexFile, "w")
   end
   lineLen = 40
   aLen = seqs[seqs.keys.first].size
   out.print "#NEXUS\nBEGIN DATA;\n"
   out.print "DIMENSIONS NTAX=#{seqs.size} NCHAR=#{aLen};\n"
   out.print "FORMAT DATATYPE=#{type} MISSING=-;\n"
   out.print "MATRIX\n"
   pos = 0
   seqs.keys.each do |key|
     print key + "\t" + seqs[key].seq + "\n"
   end	
   out.print ";\nEND;\n"
   out.close if nexFile
end

fasta2Nexus(opts.input)
